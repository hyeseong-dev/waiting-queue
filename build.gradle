plugins {
    id 'org.springframework.boot' version '3.3.4' apply false
    id 'io.spring.dependency-management' version '1.1.6' apply false
    id 'java'
}

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    // 공통적으로 사용할 외부 라이브러리 버전 설정
    ext {
        jacksonVersion = '2.15.2'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '17'
    targetCompatibility = '17'

    // 공통 의존성 관리
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    // 모든 서브모듈에서 UTF-8 인코딩을 사용하도록 설정
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    // JUnit Platform을 테스트 프레임워크로 사용
    tasks.withType(Test) {
        useJUnitPlatform()
    }

    dependencies {
    }
}

// 서브모듈별 개별 설정
project(":api") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'com.github.codemonstur:embedded-redis:1.0.0'
    }

    bootJar { enabled = true }
    jar { enabled = false }
}

project(":website") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    }

    bootJar { enabled = true }
    jar { enabled = false }
}

tasks.register('bootRunAll') {
    dependsOn(':api:bootRun', ':website:bootRun')
}